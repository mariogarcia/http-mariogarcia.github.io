module qc.Basics where

-- tag::badImplementation[]
badImplementation :: Int -> Int
badImplementation    x    = x * 2
-- end::badImplementation[]

-- tag::goodImplementation[]
goodImplementation :: Int -> Int
goodImplementation    x   = ((*2) . abs) x
-- end::goodImplementation[]

-- tag::betterImplementation[]
betterImplementation :: Int -> Int
betterImplementation    x   = if result >= 0 then result else 0
  where result = ((*2) . abs) x
-- end::betterImplementation[]
